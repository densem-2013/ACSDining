//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACSDining.Core.Domains
{
    using ACSDining.Core.Migrations;
    using ACSDining.Core.Identity;
    using Microsoft.AspNet.Identity.EntityFramework;
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.ModelConfiguration.Conventions;
    using System.Globalization;
    
    public partial class ApplicationDbContext  : IdentityDbContext<User>
    {
        public ApplicationDbContext()
            : base("name=ApplicationDbContext", throwIfV1Schema: false)
        {
        }

        static ApplicationDbContext()
        {
            Database.SetInitializer<ApplicationDbContext>(new ApplicationDbInitializer());
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
            modelBuilder.Entity<MenuForDay>()
            .HasMany(mfd => mfd.Dishes).WithMany(m => m.MenusFD)
            .Map(t => t.MapLeftKey("MenuID")
            .MapRightKey("DishID")
            .ToTable("MFD_Dishes"));

            base.OnModelCreating(modelBuilder);
        }
        public static ApplicationDbContext Create()
        {
            return new ApplicationDbContext();
        }

        public virtual DbSet<Dish> Dishes { get; set; }
        public virtual DbSet<DishType> DishTypes { get; set; }
        public virtual DbSet<MenuForDay> MenuForDay { get; set; }
        public virtual DbSet<MenuForWeek> MenuForWeek { get; set; }
        public virtual DbSet<OrderMenu> OrderMenu { get; set; }
        public virtual DbSet<DishQuantity> DishQuantities { get; set; }
        public virtual DbSet<DishDetail> DishDetails { get; set; }
        public virtual DbSet<DayOfWeek> Days { get; set; }
        public virtual DbSet<Year> Years { get; set; }

        public Func<int> CurrentWeek = () =>
            {
                CultureInfo myCI = new CultureInfo("uk-UA");
                Calendar myCal = myCI.Calendar;

                // Gets the DTFI properties required by GetWeekOfYear.
                CalendarWeekRule myCWR = myCI.DateTimeFormat.CalendarWeekRule;
                System.DayOfWeek myFirstDOW = myCI.DateTimeFormat.FirstDayOfWeek;
                DateTime LastDay = new System.DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
                return myCal.GetWeekOfYear(LastDay, myCWR, myFirstDOW);
            };

    }
}
